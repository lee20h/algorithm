(window.webpackJsonp=window.webpackJsonp||[]).push([[104],{452:function(_,v,l){"use strict";l.r(v);var i=l(25),t=Object(i.a)({},(function(){var _=this,v=_.$createElement,l=_._self._c||v;return l("ContentSlotsDistributor",{attrs:{"slot-key":_.$parent.slotKey}},[l("h1",{attrs:{id:"코드-분석"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#코드-분석"}},[_._v("#")]),_._v(" 코드 분석")]),_._v(" "),l("h2",{attrs:{id:"_1단계-준비"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_1단계-준비"}},[_._v("#")]),_._v(" 1단계: 준비")]),_._v(" "),l("ol",[l("li",[_._v("프로젝트의 개요 파악\n"),l("ul",[l("li",[_._v("개발 및 실행 환경 요구 사항\n"),l("ul",[l("li",[_._v("내가 환경을 구성하기에 적절한 자원(컴퓨팅 환경, 시간, 비용 등)을 갖고 있는가?")])])]),_._v(" "),l("li",[_._v("문서 및 추가 자료들이 있는가?\n"),l("ul",[l("li",[_._v("공식 사이트에 Documentation 이 잘 되어있어야 함")]),_._v(" "),l("li",[_._v("구글 등 검색에서 나오는 자료들이 많아야 trouble shooting이 용이함")]),_._v(" "),l("li",[_._v("Project Community 의 규모가 클수록 자료도 많음")])])])])]),_._v(" "),l("li",[_._v("실제 SW의 동작 확인\n"),l("ul",[l("li",[_._v("실행 환경을 구성해보지 않고도 미리 수행해볼 수 있다면 매우 좋음\n"),l("ul",[l("li",[_._v("예) 소스 코드가 아니라도 실행 파일이 있거나, 앱이 있거나.")])])]),_._v(" "),l("li",[_._v("수정할 대상이 될 기존 기능의 동작을 확인")])])]),_._v(" "),l("li",[_._v("수정할 기능의 구상\n"),l("ul",[l("li",[_._v("어떤 기능을 수정, 추가할 것인가?\n"),l("ul",[l("li",[_._v("실제 사용해보면서 하려고 하는 일의 정확한 요구 사항을 파악해야 함")])])]),_._v(" "),l("li",[_._v("구현이 가능할 것인지 미리 예측을 해봄\n"),l("ul",[l("li",[_._v("겉으로 파악할 수 있는 세부 동작을 추측해가며 기능의 구현 방향을 다양하게 구상해보고, 난이도를 미리 예측해보아야 함")])])])])]),_._v(" "),l("li",[_._v("빌드 및 실행 환경 구성\n"),l("ul",[l("li",[_._v("Build environment 의 구성에 관한 문서를 찾고 그에 따라 환경 구성\n"),l("ul",[l("li",[_._v("뭔가 복잡한데 아무런 문서가 없으면…빠르게 포기하자")])])])])]),_._v(" "),l("li",[_._v("빌드 후 정상 동작의 확인\n"),l("ul",[l("li",[_._v("실행 환경을 구성하고 수정하고자 하는 기능의 정상 동작을 확인")]),_._v(" "),l("li",[_._v("Debug 모드가 있는지 확인하고, 있다면 Debug mode 로 작업")])])])]),_._v(" "),l("h2",{attrs:{id:"_2단계-구조-분석-architecture"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_2단계-구조-분석-architecture"}},[_._v("#")]),_._v(" 2단계: 구조 분석 (architecture)")]),_._v(" "),l("ol",[l("li",[_._v("Documents 확보\n"),l("ul",[l("li",[_._v("전체적인 구조 및 세부 컴포넌트에 관한 Document 검색 및 확보")]),_._v(" "),l("li",[_._v("버전을 잘 확인하면서 볼 것")])])]),_._v(" "),l("li",[_._v("전체적인 구조와 각 컴포넌트의 역할, 인터페이스 파악\n"),l("ul",[l("li",[_._v("구조를 설명하는 main document 전체를 처음 한 번은 정독하자")]),_._v(" "),l("li",[_._v("당장 연관이 없어 보이더라도 소스코드를 볼 때 큰 도움이 됨")])])]),_._v(" "),l("li",[_._v("수정 기능과 연관있는 세부 컴포넌트의 세부 역할 파악")]),_._v(" "),l("li",[_._v("연관된 컴포넌트들 간의 인터페이스 파악")])]),_._v(" "),l("h2",{attrs:{id:"_3단계-코드-분석"}},[l("a",{staticClass:"header-anchor",attrs:{href:"#_3단계-코드-분석"}},[_._v("#")]),_._v(" 3단계: 코드 분석")]),_._v(" "),l("ol",[l("li",[_._v("Document에 따라 코드 분석의 진입점을 설정\n"),l("ul",[l("li",[_._v("Top-down: 동작 방식(event driven, procedure 등)에 따라 main() 함수 와 같이 뼈대가 되는 코드부터 call chain을 따라가며 수정하고자 하는 코드까지 trace를 진행")]),_._v(" "),l("li",[_._v("Bottom-up: 수정하고자 하는 코드를 바로 접근하고, 해당 코드를 호출하는 함수들을 추적해나가며 전체 구조를 파악")])])]),_._v(" "),l("li",[_._v("수정하고자 하는 코드의 동작을 확인\n"),l("ul",[l("li",[_._v("우선 코드에 존재하는 주석들을 통해 코드 전체의 흐름 파악")]),_._v(" "),l("li",[_._v("간단한 debugging message를 통해 세부적인 사항 파악: 변수 및 sub-function의 기능 확인")])])]),_._v(" "),l("li",[_._v("관련된 코드, 컴포넌트와의 연관 관계를 파악\n"),l("ul",[l("li",[_._v("컴포넌트, 함수들 간의 관계를 잘 분리해서 설계하지 않은 코드의 경우, 해당 코드를 수정하면 다른 코드에 영향을 미치는 경우가 있음")]),_._v(" "),l("li",[_._v("전체 코드가 공유하는 자료 구조, 전역 변수 등을 확인해야 함")])])]),_._v(" "),l("li",[_._v("코드 수정\n"),l("ul",[l("li",[_._v("수정하고자 하는 기능의 형태, 동작을 설계하고,")]),_._v(" "),l("li",[l("strong",[_._v("Divide & Conquer")]),_._v(" 방식으로 진행할 수 있도록 구현의 단계를 세분화")]),_._v(" "),l("li",[_._v("한 단계씩 진행하며 반드시 필요한 테스트들을 진행")]),_._v(" "),l("li",[_._v("기존 코드 내용을 수정할 경우, 최소한 주석 처리를 해두거나, "),l("code",[_._v("#ifdef")]),_._v(" 와 같은 전처리 명령을 이용해 수정한 부분을 기존 코드와 분리할 것")]),_._v(" "),l("li",[_._v("해당 프로젝트의 code convention 을 잘 확인하고, 그에 따라 진행할 것")])])])])])}),[],!1,null,null,null);v.default=t.exports}}]);