(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{398:function(t,a,n){"use strict";n.r(a);var s=n(25),r=Object(s.a)({},(function(){var t=this,a=t.$createElement,n=t._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"정렬"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#정렬"}},[t._v("#")]),t._v(" 정렬")]),t._v(" "),n("h2",{attrs:{id:"시간복잡도-θ-n²-인-정렬"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#시간복잡도-θ-n²-인-정렬"}},[t._v("#")]),t._v(" 시간복잡도 Θ(n²)인 정렬")]),t._v(" "),n("h3",{attrs:{id:"선택-정렬"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#선택-정렬"}},[t._v("#")]),t._v(" 선택 정렬")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("```cpp\nselectionSort(A[], n) {\n\tfor last <- n downto 2 {\n\t\tA배열 중 가장 큰 수 찾는다.\n\t\t큰수 와 last와 swap\n\t}\n}\n```\n(n-1)+(n-2)+...+2+1 = Θ(n²) worst, average  \n")])])]),n("h3",{attrs:{id:"버블-정렬"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#버블-정렬"}},[t._v("#")]),t._v(" 버블 정렬")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("```cpp\nbubbleSort(A[], n) {\n\tfor last <- n downto 2\n\t\tfor i <- 1 to last - 1\n\t\t\tif(A[i]>A[i+1]) then A[i], A[i+1] swap \n}\n```\n(n-1)+(n-2)+...+2+1 = Θ(n²) worst, average\n")])])]),n("h3",{attrs:{id:"삽입정렬"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#삽입정렬"}},[t._v("#")]),t._v(" 삽입정렬")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("```cpp\ninsertionSort(A[], n) {\n\tfor i <- 2 to n\n\t\tA[]배열의 적당한 자리에 A[i]을 삽입\n}\n```\nWorst : 1+2+...+(n-2)+(n-1) : Θ(n²)  \nAverage : ½(1+2+...+(n-2)+(n-1)) : Θ(n²)  \nBest : Θ(n) (이미 정렬 된 경우)  \n")])])]),n("h2",{attrs:{id:"평균적으로-시간복잡도-θ-nlogn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#평균적으로-시간복잡도-θ-nlogn"}},[t._v("#")]),t._v(" 평균적으로 시간복잡도 Θ(nlogn)")]),t._v(" "),n("h3",{attrs:{id:"병합정렬"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#병합정렬"}},[t._v("#")]),t._v(" 병합정렬")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("```cpp\nmergeSort(A[],p,r) {\n\tif(p<r) then {\n\t\tq <- |(p+r)/2|;\n\t\tmergeSort(A,p,q);\n\t\tmergeSort(A,q+1,r);\n\t\tmerge(A,p,q,r);\n\t}\n}\nmerge(A[],p,q,r) {\n\ti = p; j = q+1; t= 1;\n\twhile(i<=q && j <= r) {\n\t\tif(A[i]<=A[j]) then temp[t++] = A[i++];\n\t\telse temp[t++] = A[j++];\n\t}\n\n\twhile(i<=q) temp[t++] = A[i++];\n\twhile(i<=r) temp[t++] = A[j++];\n\n\ti = p; t = 1;\n\twhile(i<=r) A[i++] = temp[t++];\n}\n```\nmerge : O(n)\nmergeSort : O(logn)\n")])])]),n("h3",{attrs:{id:"퀵정렬"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#퀵정렬"}},[t._v("#")]),t._v(" 퀵정렬")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("```cpp\nquickSort(A[],p,r) {\n\tif(p<r) then {\n\t\tq = partion(A,p,r);\n\t\tquickSort(A,p,q-1);\n\t\tquickSort(A,q+1,r);\n\t}\n}\npartition(A[],p,r) {\n\tx = A[r];\n\ti = p-1;\n\tfor j <- p to r-1\n\t\tif(A[j]<=x) then swap(A[++i], A[i])\n\tswap(A[i+1], A[r])\n\treturn i+1\n}\n```\naverage : Θ(nlogn)\nworst : Θ(n²) (이미 정렬 된 경우)\n")])])]),n("h3",{attrs:{id:"힙정렬"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#힙정렬"}},[t._v("#")]),t._v(" 힙정렬")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("```cpp\nheapSort(A[], n) {\n\tbuildHeap(A,n);\n\tfor i <- downto 2 {\n\t\tswap(A[1], A[i]);\n\t\theapify(A,1,i-1)\n\t}\n}\nbuildHeap(A[],n) {\n\tfor i <- n/2 downto 1\n\t\theapify(A,i,n);\n}\nheapify(A[], k, n) {\n\tleft = 2k; right 2k+1;\n\tif(right<=n) {\n\t\tif(A[left] < A[right])\n\t\t\tsmaller = left;\n\t\telse\n\t\t\tsmaller = right;\n\n\t}\n\telse if (left<=n) smaller = left;\n\telse return;\n\tif(A[smaller] < A[k]) {\n\t\tswap(A[k],A[smaller]);\n\t\theapify(A, smaller, n);\n\t}\n}\n```\nworst : O(nlogn) buildHeap O(nlogn) heapify O(logn)\n")])])]),n("h2",{attrs:{id:"θ-n-정렬"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#θ-n-정렬"}},[t._v("#")]),t._v(" Θ(n) 정렬")]),t._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",[n("code",[t._v("하한선 Ω(nlogn)  \n특수한 성질 만족하면 Θ(n)정렬 가능\n")])])]),n("h3",{attrs:{id:"계수정렬-counting-sort"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#계수정렬-counting-sort"}},[t._v("#")]),t._v(" 계수정렬(counting sort)")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("countingSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("B"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" to k\n\t\tC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" to n\n\t\tC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" i "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" to k\n\t\tC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" j "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" n downto "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tB"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("C"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\tC"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("A"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("--")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("h3",{attrs:{id:"기수정렬-radix-sort"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#기수정렬-radix-sort"}},[t._v("#")]),t._v(" 기수정렬(Radix Sort)")]),t._v(" "),n("div",{staticClass:"language-cpp extra-class"},[n("pre",{pre:!0,attrs:{class:"language-cpp"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("radixSort")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\tqueue"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" d "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("digit")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\tq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("d"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" p "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("9")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" j"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("while")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("!")]),t._v("q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("empty")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t\t\tv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("p"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" q"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("front")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t\tq"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("j"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("pop")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n\t"),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v("n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\tcout "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" v"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<<")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v("' '")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),n("p",[t._v("Θ(n)")]),t._v(" "),n("h2",{attrs:{id:"효율성-비교"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#효율성-비교"}},[t._v("#")]),t._v(" 효율성 비교")]),t._v(" "),n("table",[n("thead",[n("tr",[n("th",{staticStyle:{"text-align":"right"}},[t._v("Kind")]),t._v(" "),n("th",{staticStyle:{"text-align":"right"}},[t._v("Worst Case")]),t._v(" "),n("th",{staticStyle:{"text-align":"right"}},[t._v("Average Case")])])]),t._v(" "),n("tbody",[n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("Selection Sort")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n²")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n²")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("Bubble Sort")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n²")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n²")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("Insertion Sort")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n²")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n²")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("Merge Sort")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("nlogn")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("nlogn")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("Quick Sort")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n²")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("nlogn")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("Counting Sort")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("Radix Sort")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("n")])]),t._v(" "),n("tr",[n("td",{staticStyle:{"text-align":"right"}},[t._v("Heap Sort")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("nlogn")]),t._v(" "),n("td",{staticStyle:{"text-align":"right"}},[t._v("nlogn")])])])]),t._v(" "),n("p",[t._v("Best Case인 경우 O(n)인 정렬 Insertion Sort, Counting Sort, Radix Sort")])])}),[],!1,null,null,null);a.default=r.exports}}]);